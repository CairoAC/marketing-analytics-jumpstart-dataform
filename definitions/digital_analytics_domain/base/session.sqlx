/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
config {
    type: "incremental",
    schema: functions.baseSchema("ga4"),
    uniqueKey: ["ga_session_id", "user_pseudo_id"],
    description: "User session",
    assertions: {
        nonNull: ["ga_session_id", "user_pseudo_id", "session_start","session_end", "session_engaged"]
    },
    bigquery: {
        // TODO: clustering on this table are best estimates
        clusterBy: ["session_start", "user_pseudo_id"]
    },
    tags: ["ga4"]
}
-- Session statistics will be updated as the result of the Dataform's generated MERGE.
-- They will be updated for the number of days defined in "ga4_incremental_processing_days_back" variable
WITH session_details AS (
SELECT 
    ga_session_id, 
    user_pseudo_id,
    MAX(user_id) user_id, -- Assumption is that there is a single user_id per session, if any
    MIN(event_timestamp) session_start,
    MAX(event_timestamp) session_end, -- A bit too simplistic, but there is no "session_end" event
    COUNTIF(event_name IN ("page_view", "screen_view")) number_of_views,
    IFNULL(SUM(engagement_time_msec),0)/1000 as total_engagement_time_secs, -- Can be meaningless if there are tiny engagement times.
    IFNULL(MAX(session_engaged_during_event), false) session_engaged, -- Contains at least one engaged event
    IFNULL(MAX(ga_session_number), 1) session_number,
    MIN(IF(event_name = 'begin_checkout', event_timestamp, NULL)) earliest_checkout,
    MAX(IF(event_name = 'purchase', event_timestamp, NULL)) latest_purchase,
    MAX(platform) platform, -- Platform should be the same per session.
    CURRENT_TIMESTAMP() as last_updated
FROM ${ref(functions.baseSchema("ga4"), "ga4_events")} 
    -- Sessions only make sense for events which have ga_session_id and user_pseudo_id
WHERE ga_session_id IS NOT NULL and user_pseudo_id IS NOT NULL
    ${when(incremental(), `AND table_suffix BETWEEN '${ga4.incrementalSuffixStart()}' AND '${ga4.incrementalSuffixEnd()}'`) }
GROUP BY ga_session_id, user_pseudo_id
)
SELECT * EXCEPT(earliest_checkout, latest_purchase),
    earliest_checkout IS NOT NULL as has_checkout_event,
    latest_purchase IS NOT NULL as has_purchase_event,
    COALESCE(earliest_checkout < latest_purchase, false) as has_valid_purchase
    FROM session_details
